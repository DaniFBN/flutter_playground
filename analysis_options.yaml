# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    avoid_print: true
    avoid_empty_else: true
    avoid_relative_lib_imports: true
    # avoid_dynamic_calls: true
    avoid_type_to_string: true
    avoid_types_as_parameter_names: true
    control_flow_in_finally: true
    empty_statements: true
    # invariant_booleans (experimental): true # Experimental
    iterable_contains_unrelated_type: true
    list_remove_unrelated_type: true
    no_logic_in_create_state: true
    literal_only_boolean_expressions: true
    no_duplicate_case_values: true
    no_adjacent_strings_in_list: true
    prefer_void_to_null: true
    throw_in_finally: true
    unnecessary_statements: true
    unrelated_type_equality_checks: true
    # use_build_context_synchronously (experimental): true # Experimental
    use_key_in_widget_constructors: true
    valid_regexps: true

    # Styles
    always_declare_return_types: true
    always_put_required_named_parameters_first: true
    always_require_non_null_named_parameters: true
    annotate_overrides: true
    avoid_bool_literals_in_conditional_expressions: true
    avoid_catches_without_on_clauses: true
    avoid_catching_errors: true
    avoid_classes_with_only_static_members: true
    avoid_escaping_inner_quotes: true
    avoid_final_parameters: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    avoid_multiple_declarations_per_line: true
    avoid_renaming_method_parameters: true
    avoid_positional_boolean_parameters: true
    avoid_return_types_on_setters: true
    avoid_shadowing_type_parameters: true
    avoid_single_cascade_in_expression_statements: true
    avoid_types_on_closure_parameters: true
    avoid_unnecessary_containers: true
    avoid_unused_constructor_parameters: true
    avoid_void_async: true
    await_only_futures: true
    camel_case_types: true
    constant_identifier_names: true
    curly_braces_in_flow_control_structures: true
    directives_ordering: true
    empty_catches: true
    empty_constructor_bodies: true
    eol_at_end_of_file: true
    file_names: true
    exhaustive_cases: true
    implementation_imports: true
    library_names: true
    library_prefixes: true
    no_leading_underscores_for_library_prefixes: true
    no_leading_underscores_for_local_identifiers: true
    non_constant_identifier_names: true
    noop_primitive_operations: true
    omit_local_variable_types: true
    overridden_fields: true
    package_prefixed_library_names: true
    prefer_conditional_assignment: true
    unawaited_futures: true
    prefer_is_not_operator: true
    slash_for_doc_comments: true
    prefer_is_empty: true
    prefer_is_not_empty: true
    prefer_if_null_operators: true
    prefer_single_quotes: true
    prefer_spread_collections: true
    use_full_hex_values_for_flutter_colors: true
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
